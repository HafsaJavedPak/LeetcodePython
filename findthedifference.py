"""
You are given two strings s and t.
String t is generated by random shuffling string s and then add one more letter at a random position.
Return the letter that was added to t.

# Approach
1. compare the words and find the extra letter
"""
from sys import argv as cli_args

import os
import string

class Solution:
    def value_error_checking (self, error_condition : bool, error : string ="") -> bool :
        """
        Checks a condition and raises a ValueError if the condition is not met.

        Args:
            error_condition (bool): The condition to check.
            error (str, optional): The error message to raise if the condition is not met.
                Defaults to an empty string.

        Returns:
            bool: returns True if there is an error, and False to indicate there is not error
        """
        try :
            if error_condition:
                raise ValueError(error)
            else:
                return False
        except ValueError as e:
            print(e)
            return True

    def findTheDifference(self, s: str, t: str) -> str:
        # inverting the return value because it tells us if there is an error, so it returns True for an error
        strings_in_lower_case = not(self.value_error_checking(s != s.lower() or t != t.lower(), "Strings are not in lowercase.") )
        len_of_s_is_correct = not(self.value_error_checking(len(s) > 1000 or len(s) < 0,"Length of original string is not equal to or in between 0 and 1000."))
        len_of_t_is_correct = not(self.value_error_checking(len(t) != len(s) + 1, "Length of shuffled string is not in accordance with the requiements. It should be one greater than original string."))

        # print(strings_in_lower_case, len_of_s_is_correct, len_of_t_is_correct, sep="\n")
        # print("coniditon", not (strings_in_lower_case or len_of_s_is_correct or len_of_t_is_correct))
        
        if  not (strings_in_lower_case and len_of_s_is_correct and len_of_t_is_correct) :
            print("function end")
            return ""
            
        self.extra_char = ""
        s1 = set(s)

        if len(s) == len(s1):
            for char in s1:
                if (s.count(char) != t.count(char)):
                    self.extra_char = char
                    break
                

        else:
            for char in t:
                if char not in s:
                    self.extra_char = char
                    break
        
        return self.extra_char

def main():

    print(Solution().findTheDifference(cli_args[1], cli_args[2]))

if __name__ == "__main__":
    main()